// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    /*
		Idea:
			Pass all n-1 bits for every letter to Mux16 using sel[2];
			a,e; c,g; b,f; d,h; - this matches the 0's and 1's of the truth table;
				ex. abcd on initial 0; efgh on initial 1; flip bc; flip fg;
			Use the outputs as inputs to Mux16 using sel[1];
			Use those outputs to get our final out bus;
		Purpose:
			8-way 16-bit Multiplexer - use 3 selection bits to get a bus we want
				from 8 different options
	**/
	Mux16(a=a, b=e, sel=sel[2], out=o1);
	Mux16(a=c, b=g, sel=sel[2], out=o2);
	Mux16(a=b, b=f, sel=sel[2], out=o3);
	Mux16(a=d, b=h, sel=sel[2], out=o4);
	Mux16(a=o1, b=o2, sel=sel[1], out=o5);
	Mux16(a=o3, b=o4, sel=sel[1], out=o6);
	Mux16(a=o5, b=o6, sel=sel[0], out=out);
}